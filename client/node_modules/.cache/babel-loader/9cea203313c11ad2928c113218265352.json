{"ast":null,"code":"import { createStore } from 'redux';\nvar rawInitState = {\n  userId: \"1000\",\n  mode: 'home',\n  rooms: [{\n    id: 1,\n    writer: '태형',\n    dep: '대전',\n    dest: '우한',\n    desc: '추가정보 없음',\n    joinedUsers: [\"3000\", \"2000\"],\n    maxNum: 4\n  }],\n  maxId: 1,\n  notices: [{\n    id: 1,\n    title: '중요공지',\n    desc: '카택전 v0.1 런칭'\n  }]\n};\nvar myRooms = [];\nmyRooms = rawInitState.rooms.filter(function (room) {\n  if (room.userId === rawInitState.userId) {\n    console.log(\"yes!\");\n    return true;\n  }\n\n  return false;\n});\nvar initState = { ...rawInitState,\n  myRooms\n};\n\nfunction reducer(state = initState, action) {\n  var newState, newMyRooms;\n\n  if (action.type === 'create') {\n    var currentMaxId = state.rooms.length;\n    var newId = currentMaxId + 1;\n    var room = {\n      id: newId,\n      writer: action.writer,\n      dep: action.dep,\n      dest: action.dest,\n      desc: action.desc,\n      joinedUsers: [state.userId],\n      maxNum: action.maxNum\n    };\n    console.log(room);\n    var newRooms = [...state.rooms, room];\n    newMyRooms = [...state.myRooms, room];\n    newState = { ...state,\n      mode: 'home',\n      rooms: newRooms,\n      maxId: newId,\n      myRooms: newMyRooms\n    };\n    return newState;\n  }\n\n  if (action.type === 'join') {\n    var userId = state.userId;\n    var room = state.rooms[action.roomId - 1];\n\n    if (room.joinedUsers.length === room.maxNum) {\n      alert(\"정원이 다 찼습니다.\");\n      return state;\n    }\n\n    for (var i = 0; i < room.joinedUsers.length; i++) {\n      var currentUserId = room.joinedUsers[i];\n\n      if (currentUserId === userId) {\n        window.alert('이미 참여한 방입니다');\n        return state;\n      }\n    }\n\n    room.joinedUsers.push(userId);\n    console.log(\"joined\", room, userId, room.joinedUsers);\n    newMyRooms = [...state.myRooms, room];\n    newState = { ...state,\n      myRooms: newMyRooms\n    };\n    return newState;\n  }\n\n  if (action.type === 'delete') {\n    var newRooms = state.rooms.filter(function (room) {\n      if (room.id === action.roomId) {\n        return false;\n      }\n\n      return true;\n    });\n    var newMyRooms = state.myRooms.filter(function (myRoom) {\n      if (myRoom.id === action.roomId) {\n        return false;\n      }\n\n      return true;\n    });\n    newState = { ...state,\n      rooms: newRooms,\n      myRooms: newMyRooms\n    };\n    return newState;\n  }\n\n  if (action.type === 'quit') {\n    var userId = state.userId;\n    var newMyRooms = [];\n\n    for (var i = 0; i < state.myRooms.length; i++) {\n      var currentRoom = state.myRooms[i];\n      var currentRoomId = currentRoom.id;\n\n      if (currentRoomId !== action.roomId) {\n        newMyRooms.push(currentRoom);\n      }\n    }\n\n    var room = state.rooms[action.roomId - 1];\n    var newJoinedUsers = room.joinedUsers.filter(function (user) {\n      if (user === userId) {\n        return false;\n      }\n\n      return true;\n    });\n    room.joinedUsers = newJoinedUsers;\n    console.log(\"quit\", room, userId, room.joinedUsers);\n    newState = { ...state,\n      myRooms: newMyRooms\n    };\n    newState.rooms.num = newState.rooms.num - 1;\n    return newState;\n  }\n\n  return state;\n}\n\nexport default createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());","map":{"version":3,"sources":["C:/git/taxi_web/client/src/store.js"],"names":["createStore","rawInitState","userId","mode","rooms","id","writer","dep","dest","desc","joinedUsers","maxNum","maxId","notices","title","myRooms","filter","room","console","log","initState","reducer","state","action","newState","newMyRooms","type","currentMaxId","length","newId","newRooms","roomId","alert","i","currentUserId","window","push","myRoom","currentRoom","currentRoomId","newJoinedUsers","user","num","__REDUX_DEVTOOLS_EXTENSION__"],"mappings":"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","sourcesContent":["import { createStore } from 'redux';\r\n\r\nvar rawInitState = {\r\n    userId: \"1000\",\r\n    mode: 'home',\r\n    rooms: [\r\n        {\r\n            id: 1, writer: '태형', dep: '대전', dest: '우한', desc: '추가정보 없음',\r\n            joinedUsers: [\"3000\", \"2000\"], maxNum:4\r\n        },\r\n    ],\r\n    maxId: 1,\r\n    notices: [\r\n        { id: 1, title: '중요공지', desc: '카택전 v0.1 런칭' }\r\n    ]\r\n};\r\n\r\nvar myRooms = [];\r\nmyRooms = rawInitState.rooms.filter(function (room) {\r\n    if (room.userId === rawInitState.userId) {\r\n        console.log(\"yes!\");\r\n        return true;\r\n    }\r\n    return false;\r\n});\r\n\r\nvar initState = { ...rawInitState, myRooms };\r\n\r\nfunction reducer(state = initState, action) {\r\n    var newState, newMyRooms;\r\n    if (action.type === 'create') {\r\n        var currentMaxId = state.rooms.length;\r\n        var newId = currentMaxId + 1;\r\n        var room = { id: newId, writer: action.writer, dep: action.dep, dest: action.dest, desc: action.desc, joinedUsers: [state.userId], maxNum:action.maxNum };\r\n        console.log(room);\r\n        var newRooms = [...state.rooms, room];\r\n        newMyRooms = [...state.myRooms, room]\r\n        newState = { ...state, mode: 'home', rooms: newRooms, maxId: newId, myRooms: newMyRooms };\r\n        return newState;\r\n    }\r\n\r\n    if (action.type === 'join') {\r\n        var userId = state.userId;\r\n        var room = state.rooms[action.roomId - 1];\r\n        if(room.joinedUsers.length===room.maxNum){\r\n            alert(\"정원이 다 찼습니다.\")\r\n            return state;}\r\n        for (var i = 0; i < room.joinedUsers.length; i++) {\r\n            var currentUserId = room.joinedUsers[i];\r\n            if (currentUserId === userId) {\r\n                window.alert('이미 참여한 방입니다');\r\n                return state;\r\n            }\r\n        }\r\n        room.joinedUsers.push(userId);\r\n        console.log(\"joined\", room, userId, room.joinedUsers);\r\n\r\n        newMyRooms = [...state.myRooms, room];\r\n        newState = { ...state, myRooms: newMyRooms};\r\n        return newState;\r\n    }\r\n\r\n    if (action.type === 'delete') {\r\n        var newRooms = state.rooms.filter(function (room) {\r\n            if (room.id === action.roomId) {\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n\r\n        var newMyRooms = state.myRooms.filter(function (myRoom) {\r\n            if (myRoom.id === action.roomId) {\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n\r\n        newState = { ...state, rooms: newRooms, myRooms: newMyRooms };\r\n        return newState;\r\n    }\r\n\r\n    if (action.type === 'quit') {\r\n        var userId = state.userId;\r\n        var newMyRooms = [];\r\n        for (var i = 0; i < state.myRooms.length; i++) {\r\n            var currentRoom = state.myRooms[i];\r\n            var currentRoomId = currentRoom.id;\r\n            if (currentRoomId !== action.roomId) {\r\n                newMyRooms.push(currentRoom);\r\n            }\r\n        }\r\n        var room = state.rooms[action.roomId-1];\r\n\r\n        var newJoinedUsers = room.joinedUsers.filter(function(user){\r\n            if(user === userId){\r\n                return false;\r\n            }\r\n            return true;\r\n        })\r\n\r\n        room.joinedUsers = newJoinedUsers;\r\n        console.log(\"quit\", room, userId, room.joinedUsers);\r\n\r\n\r\n        newState = { ...state, myRooms: newMyRooms };\r\n        newState.rooms.num = newState.rooms.num - 1\r\n        return newState;\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n"]},"metadata":{},"sourceType":"module"}